#+title: A Manufacturer-Agnostic Automation Framework for SPM
#+author: Nick Sullivan Molina$^1$, Peter Grutter$^2$, Kirk H. Bevan$^1$
#+date:

#+startup: beamer
#+latex_class: beamer
# 10pt dictates the overall font size, from 8-12.
#+latex_class_options: [presentation, 9pt]

# Set toc to nil if no outline is desired.
# h/headlines is the headlines level considered for slides.
#+options: h:2 toc:1

# Set institute
#+beamer_header:\institute{Materials and Mining Engineering Department$^1$, McGill University \newline Physics Department$^2$, McGill University\newline\bigskip\includegraphics[width=0.2\paperwidth]{./images/mcgill_sig_red.png}}

# Add mcgill logo to title slide
# #+beamer_header: \usebackgroundtemplate{\includegraphics[width=0.25\paperwidth]{./images/mcgill_sig_red.png}}

# Remove weird navigation buttons
#+beamer_header:\setbeamertemplate{navigation symbols}{}

# --- Set our theme! --- #
# -- Colors -- #
# Outer Color theme: whale, seahorse, dolphin
#+beamer_header: \usecolortheme{dolphin}
# Inner Color theme: rose, lily, orchid
#+beamer_header: \usecolortheme{rose}

#+beamer_header:\definecolor{mellowgreen}{rgb}{0.25, 0.5, 0.25}
#+beamer_header:\definecolor{mellowblue}{rgb}{0.25, 0.25, 0.5}
#+beamer_header:\definecolor{lessmellowblue}{rgb}{0.0, 0.33, 0.66}
#+beamer_header:\definecolor{urlblue}{rgb}{0.25, 0.25, 0.75}
#+beamer_header:\definecolor{mydarkgray}{rgb}{0.4, 0.4, 0.4}

# Main hook: structure. All other theme colors will be based on this.

#+beamer_header:\setbeamercolor{structure}{fg=mellowblue}

# Change the normal text color, to be less garish
#+beamer_header:\setbeamercolor{normal text}{fg=mydarkgray}

# Set urls blue
#+beamer_header:\hypersetup{colorlinks, allcolors=., urlcolor=urlblue}

# Set 'alert' (org bold) to be a nice bolded color.
# Define % between structure and black
#+beamer_header:\setbeamercolor{alerted text}{fg=structure!85!white}
#+beamer_header:\setbeamerfont{alerted text}{series=\bfseries}

# -- Theme structure -- #
# Inner theme: default, circles, rectangles, rounded
#+beamer_inner_theme: rectangles
#+beamer_outer_theme: [subsection=false, footline=authortitle]miniframes

# Add frame numbers
#+beamer_header:\setbeamertemplate{page number in head/foot}[framenumber]

# Provides nicer equation fonts
#+beamer_font_theme: professionalfonts
#+beamer_header:\documentclass[xcolor=SeaGreen]{beamer}

# Uncomment to skip animations
# #+latex_class_options: [handout, 9pt]

#+latex_header:\usepackage[nofloat]{minted}
#+latex_header:\setminted{fontsize=\footnotesize, frame=lines, framesep=2mm}
#+latex_header:\usepackage{bytefield}

# Small captions, no 'name'
#+latex_header:\usepackage[font={scriptsize}]{caption}
#+latex_header:\captionsetup[figure]{name=}

#+property: header-args :mkdirp yes :results value drawer

* Justification
** SPM Basics
- An *atomically-sharp tip* is *scanned* above a *surface* measuring properties.
  - Allows spatial imaging, spectroscopic analysis, sample manipulation.
- Usable on various surfaces, only require *relatively flat* sample ($\sim 5 \mu m$).
*** AFM Configuration :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
# https://en.wikipedia.org/wiki/File:AFM_conf.jpg
#+attr_org: :width 50%
#+attr_latex: :width 0.75\linewidth
#+caption: Typical AFM Configuration, Tom Toyosaki, Wikimedia Commons.
[[./images/AFM_conf.jpg]]
*** AFM Topography :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
# https://en.wikipedia.org/wiki/Atomic_force_microscopy#/media/File:Schematics_of_Topographic_image_forming.jpg
#+attr_org: :width 50%
#+attr_latex: :width 0.75\linewidth
#+caption: Schematics of AFM topographic image forming, Tom Toyosaki, Wikimedia Commons.
[[./images/Schematics_of_Topographic_image_forming.jpg]]

** Challenges and Automation
#+beamer:\pause
*** Challenges for Wider Adoption
:PROPERTIES:
:BEAMER_env: exampleblock
:END:
1. Preparing, running, and analyzing requires significant *domain knowledge*.
2. Running an experiment requires *constant user attention*.
3. *Statistical* understanding is *limited* by the researcher's *decisions*.
#+beamer:\pause
*** Automation Prior Art
- *Conditioning* of the *tip* for proper surface characterization.
- *Structure classification*, for *where to scan* next.
- *Bayesian/Active Learning* for statistical decision making.

** A Remaining Limitation
# *** Description :BMCOL:
# :PROPERTIES:
# :BEAMER_col: 0.5
# :END:
Many SPM systems allow custom scripts to run an experiment. But:
- Scripts written for a *specific* SPM system *cannot be re-used* on others.
- While *decoupling* is possible, it is *rarely* a *priority* for researchers.
#+beamer:\pause
# *** Image :BMCOL:
# :PROPERTIES:
# :BEAMER_col: 0.5
# :END:
#+attr_org: :width 50%
#+attr_latex: :width 0.5\linewidth
[[./images/code_reuse_without_afspm.png]]
#+beamer:\pause
*** Note :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+beamer:\bigskip
#+beamer:\centering
/Code *reuse* is *rare*./
* Introduction to =afspm=
** Goals, Scope, and Design Characteristics
#+beamer:\pause
*** Goals
To facilitate *code sharing* and *reusability* of developed automation.
#+beamer:\pause
*** Scope
Concerned with the *choices* a researcher would perform *during* an experiment.
#+beamer:\pause
*** Design Characteristics
- *Standalone components* that each 'do one thing and do it well' (nodes).
- They communicate over *'pipes'* via generic *schemas*.
- It is easy to *split up* components among *different* computing *devices*.
** Principal Components
#+attr_org: :width 50%
#+attr_latex: :width 0.4\linewidth
[[./images/afspm_hl_diagram.png]]

#+beamer:\pause
Any experiment must contain:
- *Microscope Translator*: translates between afspm-generic and microscope-specific.
- *Microscope Scheduler*: mediates control between components and translator and caches data.
** Scripting with / without =afspm=
*** Left Col: :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
#+attr_org: :width 50%
#+attr_latex: :width 0.99\linewidth
#+caption: Code Reuse in SPM Scripting
[[./images/code_reuse_without_afspm.png]]
#+beamer:\pause
*** Right Col: :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
#+attr_org: :width 50%
#+attr_latex: :width 0.8\linewidth
#+caption: Approach Taken by afspm
[[./images/code_reuse_with_afspm.png]]

** Communication Protocol
*** Image :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+attr_org: :width 50%
#+attr_latex: :width 0.5\linewidth
[[./images/network_framework.png]]

*** Notes :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+begin_center
/Generic *schemas* sent between *network sockets* held by components./
#+end_center
#+beamer:\pause
***** Serialization / Deserialization
Translates data structures into a format that can be stored/communicated.

_*=Google Protocol Buffers=*_: avoids schema violations, extra error handling.
#+beamer:\pause
***** Data Transmission Protocol
Handles sending of data between 'sockets' via common 'nodes'.

_*=ZeroMQ=*_: abstracts away transports used, handles common roadblocks.
** Example
#+attr_org: :width 50%
#+attr_latex: :width 0.7\linewidth
[[./images/afspm_hl_example.png]]

#+beamer:\pause
- *ROI Analyzer* reviews scans for interesting regions.
- *Experiment* switches between scanning a large region or a suggested ROI.
- *Tip Detector* evaluates the state of the tip, logs problem if deemed poor.
- *Visualizer* visualizes what is being scanned.

* Design Particulars
** Our publisher-subscriber, control-request world
#+begin_center
/We *subscribe* to events published by the SPM and *request* actions of it./
#+end_center
#+beamer:\pause
*** Publisher-Subscriber Path
- The SPM *publishes* messages types when its 'state' changes.
- Components may *subscribe* to only messages of interest.
- Messages may be *cached* by the Scheduler, to send to new components.
#+beamer:\pause
*** Control Path
- Components send *requests* to the SPM and receive *responses*.
- The Scheduler *routes* control to the SPM (one component at a time).
- Components not in control may flag *problems* -- control is dropped.
  - A user may *manually* fix a problem and unflag the problem.
  - A component that *fixes* a flagged problem can grab control.
** afspm: Detailed View
#+attr_org: :width 50%
#+attr_latex: :width 1.0\linewidth
[[./images/afspm_control.png]]
** Publisher-Subscriber Path
*** Left Column
:PROPERTIES:
:BEAMER_col: 0.4
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
    message DataAspects {
      optional Size2u shape = 1;
      optional string units = 2;
    }

    message SpatialAspects {
      optional Rect2d roi = 1;
      optional string units = 2;
    }

    message ScanParameters2d {
      optional SpatialAspects spatial = 1;
      optional DataAspects data = 2;
    }
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{2D Scan Parameters Schema}}
#+end_center
*** Right Column
:PROPERTIES:
:BEAMER_col: 0.52
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
message Scan2d {
  optional ScanParameters2d params = 1;
  optional google.protobuf.Timestamp timestamp = 2;
  optional string channel = 3;
  optional string filename = 5;
  repeated double values = 4;
}
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{2D Scan Schema}}
#+end_center
#+beamer:\pause
*** Break Columns
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
\bigskip
#+begin_center
#+begin_latex
\begin{scriptsize}
\begin{bytefield}[bitwidth=0.75em]{50}
\bitbox[]{10}{Frame 1} & \bitbox{20}{\texttt{`Scan2d'}} & \bitbox[]{20}{\textit{Envelope}} \\
\bitbox[]{10}{Frame 2} & \bitbox{20}{\texttt{Scan2d Data}} & \bitbox[]{20}{\textit{Serialized Data Structure}}
\end{bytefield}
\end{scriptsize}
#+end_latex
#+end_center
#+begin_center
#+latex:\scriptsize{\textbf{Message Format}}
#+end_center
** Control Path
*** Left Column
:PROPERTIES:
:BEAMER_col: 0.47
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
enum ControlRequest {
  REQ_UNDEFINED = 0;
  REQ_START_SCAN = 1;     // [...]
  REQ_REQUEST_CTRL = 4;   // [...]
  REQ_ADD_EXP_PRBLM = 6;  // [...]
  REQ_SET_CONTROL_MODE = 8;
}
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Control Request Schema}}
#+end_center
*** Right Column
:PROPERTIES:
:BEAMER_col: 0.52
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
enum ControlResponse {
  REP_SUCCESS = 0;
  REP_FAILURE = 1;             // [...]
  REP_NO_RESPONSE = 3;         // [...]
  REP_NOT_FREE = 7;            // [...]
  REP_PARAM_NOT_SUPPORTED = 9; // [...]
}
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Control Response Schema}}
#+end_center
*** Break Columns
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
#+beamer:\pause
*** Left Column
:PROPERTIES:
:BEAMER_col: 0.47
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
enum ExperimentProblem {
  EP_NONE = 0;
  EP_TIP_SHAPE_CHANGED = 1;
  EP_DEVICE_MALFUNCTION = 2;
  EP_FEEDBACK_NON_OPTIMAL = 3;
}
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Experiment Problem Schema}}
#+end_center
*** Right Column
:PROPERTIES:
:BEAMER_col: 0.52
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src protobuf :results code
enum ControlMode {
  CM_UNDEFINED = 0;
  CM_MANUAL = 1;
  CM_AUTOMATED = 2;
  CM_PROBLEM = 3;
}
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Control Mode Schema}}
#+end_center
#+beamer:\pause
*** Break Columns
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
\bigskip
\bigskip
#+begin_center
#+begin_latex
\begin{scriptsize}
\begin{bytefield}[bitwidth=0.66em]{60}
      \bitbox[]{10}{Frame 1} & \bitbox{20}{\texttt{REQ\_REQUEST\_CTRL}} & \bitbox[]{30}{\textit{Command Request Enum}} \\
      \bitbox[]{10}{Frame 2} & \bitbox{20}{\texttt{EP\_TIP\_SHAPE\_CHANGED}} & \bitbox[]{30}{\textit{Serialized Data Structure(s)}}
\end{bytefield}
\end{scriptsize}
#+end_latex
#+end_center
#+begin_center
#+latex:\scriptsize{\textbf{Message Format}}
#+end_center
** Spawning, Monitoring, and the Config File
#+begin_center
/An experiment defined via a *config* file, with components *spawned* as needed./
#+end_center
#+beamer:\pause
*** Spawning
- Each component is instantiated as a child process (independent memory).
  - One crashed component does not crash all.
- We can spawn different components on different computers.
  - The 'spawn' command allows indication of which components to spawn.
#+beamer:\pause
*** Monitoring
- The parent process monitors spawned components for heartbeats.
- If a process has not 'beat' in a timeframe, it is killed and respawned.
- Then the caching logic chosen is important -- must be able to run.
# #+beamer:\pause
# *** Config File
# - We use a TOML-based configuration file to define experiments.
#     - Dict-of-dicts, with parser to allow variable setting.
** Sample Config File
*** Left Column
:PROPERTIES:
:BEAMER_col: 0.5
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src toml :results code
  # --- URLs --- #
  pub_url = "tcp://127.0.0.1:9000"
  psc_url = "tcp://127.0.0.1:9001"

  server_url = "tcp://127.0.0.1:6666"
  router_url = "tcp://127.0.0.1:6667"
  # [...]
  exp_scan_res = [256, 256]
  # [...]
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{General Variables}}
#+end_center
*** Right Column
:PROPERTIES:
:BEAMER_col: 0.5
:END:
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src toml :results code
  # ----- PubSub ----- #
  [translator_pub]
  class = 'afspm.io.pubsub.publisher.Publisher'
  url = 'pub_url'
  # [...]
  [experiment_sub]
  class = 'afspm.io.pubsub.subscriber.Subscriber'
  sub_url = 'psc_url'
  # [...]
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Intermediary Classes}}
#+end_center
*** Break Columns
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
\bigskip
#+attr_latex: :options fontsize=\scriptsize, frame=lines, framesep=2mm
#+begin_src toml :results code
[translator]
component = true
class = 'afspm.components.microscope.translators.gxsm.translator.GxsmTranslator'
publisher = 'translator_pub'
control_server = 'translator_server'
# [...]
#+end_src
#+begin_center
#+latex:\scriptsize{\textbf{Config Components}}
#+end_center
** Expandability
#+begin_center
/We defined a *'basis'* set of schemas we believe are standard./

/But this is quite arbitrary! Here are ways you can expand upon them./
#+end_center
#+beamer:\pause
*** Operating Modes
- Defined as an SPM config describing cantilever control during a scan.
- We assume experiment has scan and spectroscopy modes configured.
- Can change by providing *op. mode* id and =<key:value>= *params* map.
#+beamer:\pause
*** Actions
- Many manufacturers provide some automation tasks (e.g. approach tip).
- Can send these by providing *action* id and =<key:value>= *params* map.
#+beamer:\pause
*** Custom Messages
- Any user may create custom messages or expand existing ones.
** The End :BMCOL:
:PROPERTIES:
:BEAMER_col: 1.0
:END:
#+beamer:\centering
Let us know what you think and help us make it better.

#+beamer:\medskip
[[https://www.github.com/nsulmol/afspm][afspm on github]]
