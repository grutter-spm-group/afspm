/*
  This file holds scan message types, for sending the results of individual
  scans between afspm nodes.
*/


// NOTE: Units are used to tell the MicroscopeTranslator, not to *demand* the
// format they should be returned in! The AfspmComponent should read the
// units and convert to their desired format.
// Pint can be used on either end.

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "geometry.proto";

/* Enum indicating the current state of scanning */
enum ScanState {
  SS_UNDEFINED = 0;
  SS_MOVING = 1;  // Tip moving, not scanning
  SS_SCANNING = 2;
  SS_FREE = 3; // Neither scanning nor moving, free to do something else
  SS_INTERRUPTED = 4; // Scan was interrupted mid scan!
  SS_MOTOR_RUNNING = 5; // A coarse motor is in motion.
  SS_BUSY_PARAM = 6; // A param request was sent, in process of setting.
}

/* Message to hold ScanState. Remember, any message 'published' by the
 * MicroscopeTranslator *must* be a protobuf Message, so we have to package in
 * this format.
 */
message ScanStateMsg {
  ScanState scan_state = 1;
}


/* Holds data shape and units. */
message DataAspects {
  optional Size2u shape = 1;  // If/when we support spectroscopy, change to 3d
  // Note: unimportant when *setting*, useful for *interpreting*.
  optional string units = 2;
}

/* Holds spatial roi and units. */
message SpatialAspects {
  optional Rect2d roi = 1;
  optional string units = 2; // Units for y- and x- dimensions
}

/* ScanParameters contains the parameters of the scan that can be set
  * externally. */
message ScanParameters2d {
  optional SpatialAspects spatial = 1;
  optional DataAspects data = 2;
}

/* Scan contains the parameters, data array from an individual scan, and
 * any additional data tied to the scan. */
message Scan2d {
  optional ScanParameters2d params = 1;
  optional google.protobuf.Timestamp timestamp = 2;
  optional string channel = 3; // Channel to save
  optional string filename = 5;

  repeated double values = 4; // Expect [y][x]
}
