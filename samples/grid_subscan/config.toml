# ----- General variables ----- #
# --- URLs --- #
pub_url = "tcp://127.0.0.1:9000"
psc_url = "tcp://127.0.0.1:9001"
server_url = "tcp://127.0.0.1:6666"
router_url = "tcp://127.0.0.1:6667"

# --- Timing Logic --- #

# --- Experiment Scan Aspects --- #
# - Physical Stuff - #
physical_units = 'nm'
full_scan_origin = [0, 0]
full_scan_size = [200, 200]
sub_rois_per_dim = 5
small_scan_origin = [0, 0]
small_scan_size = [40, 40]  # 200 / 5

# - Data Stuff - #
data_units = 'nm'
full_scan_res = [256, 256]
small_scan_res = [512, 512]

sscans_per_fscan = 3
scans_per_reset = 4  # 3 + 1

visualization_style = 'imshow'
visualization_colormap = 'nipy_spectral'

# --- Cache Aspects --- #
[full_scan_id]
class = 'afspm.io.pubsub.logic.pbc_logic.create_roi_scan_envelope'
size = 'full_scan_size'

[small_scan_id]
class = 'afspm.io.pubsub.logic.pbc_logic.create_roi_scan_envelope'
size = 'small_scan_size'

[proto_hist_list]
class = 'afspm.io.pubsub.logic.pbc_logic.create_roi_proto_hist_list'
sizes_with_hist_list = [['full_scan_size', 1], ['small_scan_size', 'sscans_per_fscan']]

[pbc_scan_logic]
class = 'afspm.io.pubsub.logic.pbc_logic.PBCScanLogic'
proto_with_history_list = 'proto_hist_list'

[roi_cache_kwargs]
cache_logic = 'pbc_scan_logic'

# ----- PubSub ----- #
[translator_pub]
class = 'afspm.io.pubsub.publisher.Publisher'
url = 'pub_url'

[scheduler_psc]
class = 'afspm.io.pubsub.cache.PubSubCache'
url = 'psc_url'
sub_url = 'pub_url'
update_cache_kwargs = 'roi_cache_kwargs'

[experiment_sub]
class = 'afspm.io.pubsub.subscriber.Subscriber'
sub_url = 'psc_url'
extract_proto_kwargs = 'roi_cache_kwargs'
update_cache_kwargs = 'roi_cache_kwargs'

# ----- Control Logic ----- #
[translator_server]
class = 'afspm.io.control.server.ControlServer'
url = 'server_url'

[scheduler_router]
class = 'afspm.io.control.router.ControlRouter'
server_url = 'server_url'
router_url = 'router_url'

[experiment_client]
class = 'afspm.io.control.client.ControlClient'
url = 'router_url'

[ui_client]
class = 'afspm.io.control.client.AdminControlClient'
url = 'router_url'


# ----- Components ----- #
[experiment]
component = true
class = 'roi_experimenter.ROIExperimenter'

full_scan_res = 'full_scan_res'
full_scan_physical_origin = 'full_scan_origin'
full_scan_physical_size = 'full_scan_size'
physical_units = 'physical_units'
data_units = 'data_units'
sub_rois_per_dim = 'sub_rois_per_dim'
sub_scan_res = 'small_scan_res'
sub_scans_per_full_scan = 'sscans_per_fscan'
rerun_wait_s = 5

subscriber = 'experiment_sub'
control_client = 'experiment_client'

[ui]
component = true
class = 'afspm.components.control_ui.AfspmControlUI'

subscriber = 'experiment_sub'
control_client = 'ui_client'

[tip_detector]
#component = true  # uncomment to enable
class = 'freq_trigger_tip_detector.FreqTriggerTipDetector'

scan_period_raise_problem = 2
subscriber = 'experiment_sub'
control_client = 'ui_client'

[visualizer]
component = true
class = 'reset_scans_visualizer.ResetScansVisualizer'

num_scans_before_reset = 'scans_per_reset'
list_keys = ['full_scan_id', 'small_scan_id']
cache_meaning_list = ['temporal', 'regions']
scan_phys_origin_list = ['full_scan_origin', 'full_scan_origin']
scan_phys_size_list = ['full_scan_size', 'full_scan_size']
visualization_style_list = ['visualization_style', 'visualization_style']
visualization_colormap_list = ['visualization_colormap', 'visualization_colormap']

visualize_undeclared_scans = true
scan_id = 'Scan2d'

subscriber = 'experiment_sub'
control_client = 'ui_client'

[scheduler]
component = true
class = 'afspm.components.microscope.scheduler.MicroscopeScheduler'

pubsubcache = 'scheduler_psc'
router = 'scheduler_router'

[translator]
component = true
class = 'afspm.components.microscope.translators.image.translator.ImageTranslator'

physical_origin = 'full_scan_origin'
physical_size = 'full_scan_size'
physical_units = 'physical_units'
data_units = 'data_units'

scan_time_s = 5
move_time_s = 1

publisher = 'translator_pub'
control_server = 'translator_server'
subscriber = 'experiment_sub'
